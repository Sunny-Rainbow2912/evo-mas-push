{"mappings":"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","sources":["<anon>","node_modules/eth-provider/browser.js","node_modules/eth-provider/resolve/index.js","node_modules/eth-provider/provider/index.js","node_modules/events/events.js","node_modules/ethereum-provider/dist/index.js","node_modules/ethereum-provider/dist/payload.js","node_modules/eth-provider/ConnectionManager/index.js","node_modules/eth-provider/presets/index.js","node_modules/eth-provider/connections/injected.js","node_modules/eth-provider/connections/unavailable.js","node_modules/eth-provider/connections/ws.js","node_modules/eth-provider/parse/index.js","node_modules/eth-provider/connections/http.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/regex.js","main/dapps/server/inject/index.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"aAaC6\", function(module, exports) {\n\nvar $8ye8B = parcelRequire(\"8ye8B\");\n\nvar $2Fkjn = parcelRequire(\"2Fkjn\");\n\nvar $5jGvL = parcelRequire(\"5jGvL\");\nconst $7b457fd0817e60e9$var$injected = {\n    ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n    web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n};\nconst $7b457fd0817e60e9$var$ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null;\nconst $7b457fd0817e60e9$var$XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null;\nif ($7b457fd0817e60e9$var$injected.ethereum) $7b457fd0817e60e9$var$injected.ethereum.__isProvider = true;\n\n\n\n\nconst $7b457fd0817e60e9$var$connections = {\n    injected: $7b457fd0817e60e9$var$injected.ethereum || (parcelRequire(\"3Qpd6\"))($7b457fd0817e60e9$var$injected.web3),\n    ipc: (parcelRequire(\"8P8oS\"))('IPC connections are unavliable in the browser'),\n    ws: (parcelRequire(\"3bM9E\"))($7b457fd0817e60e9$var$ws),\n    http: (parcelRequire(\"idxZD\"))($7b457fd0817e60e9$var$XHR)\n};\nmodule.exports = (targets, options)=>{\n    if (targets && !Array.isArray(targets) && typeof targets === 'object' && !options) {\n        options = targets;\n        targets = undefined;\n    }\n    if (!targets) targets = [\n        'injected',\n        'frame'\n    ];\n    if (!options) options = {};\n    targets = [].concat(targets);\n    targets.forEach((t)=>{\n        if (t.startsWith('alchemy') && !options.alchemyId) throw new Error('Alchemy was included as a connection target but no Alchemy project ID was passed in options e.g. { alchemyId: \\'123abc\\' }');\n        if (t.startsWith('infura') && !options.infuraId) throw new Error('Infura was included as a connection target but no Infura project ID was passed in options e.g. { infuraId: \\'123abc\\' }');\n    });\n    const sets = $5jGvL(options);\n    return $2Fkjn($7b457fd0817e60e9$var$connections, $8ye8B(targets, sets), options);\n};\n\n});\nparcelRegister(\"8ye8B\", function(module, exports) {\nconst $639c7731244f095e$var$getProtocol = (location)=>{\n    if (location === 'injected') return 'injected';\n    if (location.endsWith('.ipc')) return 'ipc';\n    if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws';\n    if (location.startsWith('https://') || location.startsWith('http://')) return 'http';\n    return '';\n};\nmodule.exports = (targets, presets)=>{\n    return [].concat(...[].concat(targets).map((provider)=>{\n        if (presets[provider]) return presets[provider].map((location)=>({\n                type: provider,\n                location: location,\n                protocol: $639c7731244f095e$var$getProtocol(location)\n            }));\n        else return {\n            type: 'custom',\n            location: provider,\n            protocol: $639c7731244f095e$var$getProtocol(provider)\n        };\n    })).filter((provider)=>{\n        if (provider.protocol || provider.type === 'injected') return true;\n        else {\n            console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"');\n            return false;\n        }\n    });\n};\n\n});\n\nparcelRegister(\"2Fkjn\", function(module, exports) {\n\nvar $4XZ0X = parcelRequire(\"4XZ0X\");\n\nvar $dNoJe = parcelRequire(\"dNoJe\");\nvar $1f0f2a9089e9e7b2$require$EthereumProvider = $dNoJe.default;\n\nvar $eiLSf = parcelRequire(\"eiLSf\");\nconst $1f0f2a9089e9e7b2$var$monitor = (provider)=>{\n    function update(status) {\n        provider.status = status;\n        if (provider instanceof $4XZ0X) provider.emit('status', status);\n    }\n    async function checkSyncing() {\n        try {\n            if (await provider.send('eth_syncing')) update('syncing');\n        } catch (e) {\n        // don't do anything if it can't be determined whether the node is syncing or not\n        }\n    }\n    async function checkConnected() {\n        if (provider.inSetup) return setTimeout(checkConnected, 1000);\n        try {\n            await provider.send('eth_chainId');\n            update('connected');\n            setTimeout(checkSyncing, 500);\n        } catch (e) {\n            update('disconnected');\n        }\n    }\n    update('loading');\n    checkConnected();\n    provider.on('connect', ()=>checkConnected());\n    provider.on('close', ()=>update('disconnected'));\n    return provider;\n};\nmodule.exports = (connections, targets, options)=>{\n    // If window.ethereum and injected is a target in any priority, return ethereum provider\n    if (connections.injected.__isProvider && targets.map((t)=>t.type).indexOf('injected') > -1) {\n        delete connections.injected.__isProvider;\n        return $1f0f2a9089e9e7b2$var$monitor(connections.injected);\n    }\n    const provider = new $1f0f2a9089e9e7b2$require$EthereumProvider(new $eiLSf(connections, targets, options));\n    provider.setMaxListeners(128);\n    return $1f0f2a9089e9e7b2$var$monitor(provider);\n};\n\n});\nparcelRegister(\"4XZ0X\", function(module, exports) {\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\nvar $39dc0051b7cf87d5$var$R = typeof Reflect === 'object' ? Reflect : null;\nvar $39dc0051b7cf87d5$var$ReflectApply = $39dc0051b7cf87d5$var$R && typeof $39dc0051b7cf87d5$var$R.apply === 'function' ? $39dc0051b7cf87d5$var$R.apply : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n};\nvar $39dc0051b7cf87d5$var$ReflectOwnKeys;\nif ($39dc0051b7cf87d5$var$R && typeof $39dc0051b7cf87d5$var$R.ownKeys === 'function') $39dc0051b7cf87d5$var$ReflectOwnKeys = $39dc0051b7cf87d5$var$R.ownKeys;\nelse if (Object.getOwnPropertySymbols) $39dc0051b7cf87d5$var$ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n};\nelse $39dc0051b7cf87d5$var$ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n};\nfunction $39dc0051b7cf87d5$var$ProcessEmitWarning(warning) {\n    if (console && console.warn) console.warn(warning);\n}\nvar $39dc0051b7cf87d5$var$NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n    return value !== value;\n};\nfunction $39dc0051b7cf87d5$var$EventEmitter() {\n    $39dc0051b7cf87d5$var$EventEmitter.init.call(this);\n}\nmodule.exports = $39dc0051b7cf87d5$var$EventEmitter;\nmodule.exports.once = $39dc0051b7cf87d5$var$once;\n// Backwards-compat with node 0.10.x\n$39dc0051b7cf87d5$var$EventEmitter.EventEmitter = $39dc0051b7cf87d5$var$EventEmitter;\n$39dc0051b7cf87d5$var$EventEmitter.prototype._events = undefined;\n$39dc0051b7cf87d5$var$EventEmitter.prototype._eventsCount = 0;\n$39dc0051b7cf87d5$var$EventEmitter.prototype._maxListeners = undefined;\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar $39dc0051b7cf87d5$var$defaultMaxListeners = 10;\nfunction $39dc0051b7cf87d5$var$checkListener(listener) {\n    if (typeof listener !== 'function') throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n}\nObject.defineProperty($39dc0051b7cf87d5$var$EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n        return $39dc0051b7cf87d5$var$defaultMaxListeners;\n    },\n    set: function(arg) {\n        if (typeof arg !== 'number' || arg < 0 || $39dc0051b7cf87d5$var$NumberIsNaN(arg)) throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n        $39dc0051b7cf87d5$var$defaultMaxListeners = arg;\n    }\n});\n$39dc0051b7cf87d5$var$EventEmitter.init = function() {\n    if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n    }\n    this._maxListeners = this._maxListeners || undefined;\n};\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n$39dc0051b7cf87d5$var$EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n    if (typeof n !== 'number' || n < 0 || $39dc0051b7cf87d5$var$NumberIsNaN(n)) throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n    this._maxListeners = n;\n    return this;\n};\nfunction $39dc0051b7cf87d5$var$_getMaxListeners(that) {\n    if (that._maxListeners === undefined) return $39dc0051b7cf87d5$var$EventEmitter.defaultMaxListeners;\n    return that._maxListeners;\n}\n$39dc0051b7cf87d5$var$EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n    return $39dc0051b7cf87d5$var$_getMaxListeners(this);\n};\n$39dc0051b7cf87d5$var$EventEmitter.prototype.emit = function emit(type) {\n    var args = [];\n    for(var i = 1; i < arguments.length; i++)args.push(arguments[i]);\n    var doError = type === 'error';\n    var events = this._events;\n    if (events !== undefined) doError = doError && events.error === undefined;\n    else if (!doError) return false;\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n        var er;\n        if (args.length > 0) er = args[0];\n        if (er instanceof Error) // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n        // At least give some kind of context to the user\n        var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n    }\n    var handler = events[type];\n    if (handler === undefined) return false;\n    if (typeof handler === 'function') $39dc0051b7cf87d5$var$ReflectApply(handler, this, args);\n    else {\n        var len = handler.length;\n        var listeners = $39dc0051b7cf87d5$var$arrayClone(handler, len);\n        for(var i = 0; i < len; ++i)$39dc0051b7cf87d5$var$ReflectApply(listeners[i], this, args);\n    }\n    return true;\n};\nfunction $39dc0051b7cf87d5$var$_addListener(target, type, listener, prepend) {\n    var m;\n    var events;\n    var existing;\n    $39dc0051b7cf87d5$var$checkListener(listener);\n    events = target._events;\n    if (events === undefined) {\n        events = target._events = Object.create(null);\n        target._eventsCount = 0;\n    } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener !== undefined) {\n            target.emit('newListener', type, listener.listener ? listener.listener : listener);\n            // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n            events = target._events;\n        }\n        existing = events[type];\n    }\n    if (existing === undefined) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n    } else {\n        if (typeof existing === 'function') // Adding the second element, need to change to array.\n        existing = events[type] = prepend ? [\n            listener,\n            existing\n        ] : [\n            existing,\n            listener\n        ];\n        else if (prepend) existing.unshift(listener);\n        else existing.push(listener);\n        // Check for listener leak\n        m = $39dc0051b7cf87d5$var$_getMaxListeners(target);\n        if (m > 0 && existing.length > m && !existing.warned) {\n            existing.warned = true;\n            // No error code for this since it is a Warning\n            // eslint-disable-next-line no-restricted-syntax\n            var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n            w.name = 'MaxListenersExceededWarning';\n            w.emitter = target;\n            w.type = type;\n            w.count = existing.length;\n            $39dc0051b7cf87d5$var$ProcessEmitWarning(w);\n        }\n    }\n    return target;\n}\n$39dc0051b7cf87d5$var$EventEmitter.prototype.addListener = function addListener(type, listener) {\n    return $39dc0051b7cf87d5$var$_addListener(this, type, listener, false);\n};\n$39dc0051b7cf87d5$var$EventEmitter.prototype.on = $39dc0051b7cf87d5$var$EventEmitter.prototype.addListener;\n$39dc0051b7cf87d5$var$EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n    return $39dc0051b7cf87d5$var$_addListener(this, type, listener, true);\n};\nfunction $39dc0051b7cf87d5$var$onceWrapper() {\n    if (!this.fired) {\n        this.target.removeListener(this.type, this.wrapFn);\n        this.fired = true;\n        if (arguments.length === 0) return this.listener.call(this.target);\n        return this.listener.apply(this.target, arguments);\n    }\n}\nfunction $39dc0051b7cf87d5$var$_onceWrap(target, type, listener) {\n    var state = {\n        fired: false,\n        wrapFn: undefined,\n        target: target,\n        type: type,\n        listener: listener\n    };\n    var wrapped = $39dc0051b7cf87d5$var$onceWrapper.bind(state);\n    wrapped.listener = listener;\n    state.wrapFn = wrapped;\n    return wrapped;\n}\n$39dc0051b7cf87d5$var$EventEmitter.prototype.once = function once(type, listener) {\n    $39dc0051b7cf87d5$var$checkListener(listener);\n    this.on(type, $39dc0051b7cf87d5$var$_onceWrap(this, type, listener));\n    return this;\n};\n$39dc0051b7cf87d5$var$EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n    $39dc0051b7cf87d5$var$checkListener(listener);\n    this.prependListener(type, $39dc0051b7cf87d5$var$_onceWrap(this, type, listener));\n    return this;\n};\n// Emits a 'removeListener' event if and only if the listener was removed.\n$39dc0051b7cf87d5$var$EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n    var list, events, position, i, originalListener;\n    $39dc0051b7cf87d5$var$checkListener(listener);\n    events = this._events;\n    if (events === undefined) return this;\n    list = events[type];\n    if (list === undefined) return this;\n    if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0) this._events = Object.create(null);\n        else {\n            delete events[type];\n            if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n        }\n    } else if (typeof list !== 'function') {\n        position = -1;\n        for(i = list.length - 1; i >= 0; i--)if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n        }\n        if (position < 0) return this;\n        if (position === 0) list.shift();\n        else $39dc0051b7cf87d5$var$spliceOne(list, position);\n        if (list.length === 1) events[type] = list[0];\n        if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n    }\n    return this;\n};\n$39dc0051b7cf87d5$var$EventEmitter.prototype.off = $39dc0051b7cf87d5$var$EventEmitter.prototype.removeListener;\n$39dc0051b7cf87d5$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n    var listeners, events, i;\n    events = this._events;\n    if (events === undefined) return this;\n    // not listening for removeListener, no need to emit\n    if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n            this._events = Object.create(null);\n            this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n            if (--this._eventsCount === 0) this._events = Object.create(null);\n            else delete events[type];\n        }\n        return this;\n    }\n    // emit removeListener for all listeners on all events\n    if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for(i = 0; i < keys.length; ++i){\n            key = keys[i];\n            if (key === 'removeListener') continue;\n            this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n    }\n    listeners = events[type];\n    if (typeof listeners === 'function') this.removeListener(type, listeners);\n    else if (listeners !== undefined) // LIFO order\n    for(i = listeners.length - 1; i >= 0; i--)this.removeListener(type, listeners[i]);\n    return this;\n};\nfunction $39dc0051b7cf87d5$var$_listeners(target, type, unwrap) {\n    var events = target._events;\n    if (events === undefined) return [];\n    var evlistener = events[type];\n    if (evlistener === undefined) return [];\n    if (typeof evlistener === 'function') return unwrap ? [\n        evlistener.listener || evlistener\n    ] : [\n        evlistener\n    ];\n    return unwrap ? $39dc0051b7cf87d5$var$unwrapListeners(evlistener) : $39dc0051b7cf87d5$var$arrayClone(evlistener, evlistener.length);\n}\n$39dc0051b7cf87d5$var$EventEmitter.prototype.listeners = function listeners(type) {\n    return $39dc0051b7cf87d5$var$_listeners(this, type, true);\n};\n$39dc0051b7cf87d5$var$EventEmitter.prototype.rawListeners = function rawListeners(type) {\n    return $39dc0051b7cf87d5$var$_listeners(this, type, false);\n};\n$39dc0051b7cf87d5$var$EventEmitter.listenerCount = function(emitter, type) {\n    if (typeof emitter.listenerCount === 'function') return emitter.listenerCount(type);\n    else return $39dc0051b7cf87d5$var$listenerCount.call(emitter, type);\n};\n$39dc0051b7cf87d5$var$EventEmitter.prototype.listenerCount = $39dc0051b7cf87d5$var$listenerCount;\nfunction $39dc0051b7cf87d5$var$listenerCount(type) {\n    var events = this._events;\n    if (events !== undefined) {\n        var evlistener = events[type];\n        if (typeof evlistener === 'function') return 1;\n        else if (evlistener !== undefined) return evlistener.length;\n    }\n    return 0;\n}\n$39dc0051b7cf87d5$var$EventEmitter.prototype.eventNames = function eventNames() {\n    return this._eventsCount > 0 ? $39dc0051b7cf87d5$var$ReflectOwnKeys(this._events) : [];\n};\nfunction $39dc0051b7cf87d5$var$arrayClone(arr, n) {\n    var copy = new Array(n);\n    for(var i = 0; i < n; ++i)copy[i] = arr[i];\n    return copy;\n}\nfunction $39dc0051b7cf87d5$var$spliceOne(list, index) {\n    for(; index + 1 < list.length; index++)list[index] = list[index + 1];\n    list.pop();\n}\nfunction $39dc0051b7cf87d5$var$unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for(var i = 0; i < ret.length; ++i)ret[i] = arr[i].listener || arr[i];\n    return ret;\n}\nfunction $39dc0051b7cf87d5$var$once(emitter, name) {\n    return new Promise(function(resolve, reject) {\n        function errorListener(err) {\n            emitter.removeListener(name, resolver);\n            reject(err);\n        }\n        function resolver() {\n            if (typeof emitter.removeListener === 'function') emitter.removeListener('error', errorListener);\n            resolve([].slice.call(arguments));\n        }\n        $39dc0051b7cf87d5$var$eventTargetAgnosticAddListener(emitter, name, resolver, {\n            once: true\n        });\n        if (name !== 'error') $39dc0051b7cf87d5$var$addErrorHandlerIfEventEmitter(emitter, errorListener, {\n            once: true\n        });\n    });\n}\nfunction $39dc0051b7cf87d5$var$addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n    if (typeof emitter.on === 'function') $39dc0051b7cf87d5$var$eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n}\nfunction $39dc0051b7cf87d5$var$eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n    if (typeof emitter.on === 'function') {\n        if (flags.once) emitter.once(name, listener);\n        else emitter.on(name, listener);\n    } else if (typeof emitter.addEventListener === 'function') // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n        // IE does not have builtin `{ once: true }` support so we\n        // have to do it manually.\n        if (flags.once) emitter.removeEventListener(name, wrapListener);\n        listener(arg);\n    });\n    else throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n}\n\n});\n\nparcelRegister(\"dNoJe\", function(module, exports) {\n\"use strict\";\nvar $a0b3088fe90dd0a1$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\n\nconst $a0b3088fe90dd0a1$var$events_1 = $a0b3088fe90dd0a1$var$__importDefault((parcelRequire(\"4XZ0X\")));\n\nvar $aKexC = parcelRequire(\"aKexC\");\nclass $a0b3088fe90dd0a1$var$Provider extends $a0b3088fe90dd0a1$var$events_1.default {\n    constructor(connection){\n        super();\n        this.promises = {};\n        this.attemptedSubscriptions = new Set();\n        this.subscriptions = [];\n        this.checkConnectionRunning = false;\n        this.nextId = 1;\n        this.connected = false;\n        this.accounts = [];\n        this.selectedAddress = undefined;\n        this.coinbase = undefined;\n        this.enable = this.enable.bind(this);\n        this.doSend = this.doSend.bind(this);\n        this.send = this.send.bind(this);\n        this.sendBatch = this.sendBatch.bind(this);\n        this.subscribe = this.subscribe.bind(this);\n        this.unsubscribe = this.unsubscribe.bind(this);\n        this.resumeSubscriptions = this.resumeSubscriptions.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.sendAsyncBatch = this.sendAsyncBatch.bind(this);\n        this.isConnected = this.isConnected.bind(this);\n        this.close = this.close.bind(this);\n        this.request = this.request.bind(this);\n        this.connection = connection;\n        this.on('connect', this.resumeSubscriptions);\n        this.connection.on('connect', ()=>this.checkConnection(1000));\n        this.connection.on('close', ()=>{\n            this.connected = false;\n            this.attemptedSubscriptions.clear();\n            this.emit('close');\n            this.emit('disconnect');\n        });\n        this.connection.on('payload', (payload)=>{\n            const { id: id, method: method, error: error, result: result } = payload;\n            if (typeof id !== 'undefined') {\n                if (this.promises[id]) {\n                    const requestMethod = this.promises[id].method;\n                    if (requestMethod && [\n                        'eth_accounts',\n                        'eth_requestAccounts'\n                    ].includes(requestMethod)) {\n                        const accounts = result || [];\n                        this.accounts = accounts;\n                        this.selectedAddress = accounts[0];\n                        this.coinbase = accounts[0];\n                    }\n                    payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result);\n                    delete this.promises[id];\n                }\n            } else if (method && method.indexOf('_subscription') > -1) {\n                // Events: connect, disconnect, chainChanged, chainsChanged, accountsChanged, assetsChanged, message\n                this.emit(payload.params.subscription, payload.params.result);\n                this.emit(method, payload.params); // Older EIP-1193\n                this.emit('message', {\n                    type: payload.method,\n                    data: {\n                        subscription: payload.params.subscription,\n                        result: payload.params.result\n                    }\n                });\n                this.emit('data', payload); // Backwards Compatibility\n            }\n        });\n        this.on('newListener', (event)=>{\n            if (Object.keys(this.eventHandlers).includes(event)) {\n                if (!this.attemptedSubscription(event) && this.connected) {\n                    this.startSubscription(event);\n                    if (event === 'networkChanged') console.warn('The networkChanged event is being deprecated, use chainChanged instead');\n                }\n            }\n        });\n        this.eventHandlers = {\n            networkChanged: (netId)=>{\n                this.networkVersion = typeof netId === 'string' ? parseInt(netId) : netId;\n                this.emit('networkChanged', this.networkVersion);\n            },\n            chainChanged: (chainId)=>{\n                this.providerChainId = chainId;\n                if (!this.manualChainId) this.emit('chainChanged', chainId);\n            },\n            chainsChanged: (chains)=>{\n                this.emit('chainsChanged', chains);\n            },\n            accountsChanged: (accounts)=>{\n                this.selectedAddress = accounts[0];\n                this.emit('accountsChanged', accounts);\n            },\n            assetsChanged: (assets)=>{\n                this.emit('assetsChanged', assets);\n            }\n        };\n    }\n    get chainId() {\n        return this.manualChainId || this.providerChainId;\n    }\n    async checkConnection(retryTimeout = 4000) {\n        if (this.checkConnectionRunning || this.connected) return;\n        clearTimeout(this.checkConnectionTimer);\n        this.checkConnectionTimer = undefined;\n        this.checkConnectionRunning = true;\n        try {\n            this.networkVersion = await this.doSend('net_version', [], undefined, false);\n            this.providerChainId = await this.doSend('eth_chainId', [], undefined, false);\n            this.connected = true;\n        } catch (e) {\n            this.checkConnectionTimer = setTimeout(()=>this.checkConnection(), retryTimeout);\n            this.connected = false;\n        } finally{\n            this.checkConnectionRunning = false;\n            if (this.connected) this.emit('connect', {\n                chainId: this.providerChainId\n            });\n        }\n    }\n    attemptedSubscription(event) {\n        return this.attemptedSubscriptions.has(event);\n    }\n    setSubscriptionAttempted(event) {\n        this.attemptedSubscriptions.add(event);\n    }\n    async startSubscription(event) {\n        console.debug(`starting subscription for ${event} events`);\n        this.setSubscriptionAttempted(event);\n        try {\n            const eventId = await this.subscribe('eth_subscribe', event);\n            this.on(eventId, this.eventHandlers[event]);\n        } catch (e) {\n            console.warn(`Unable to subscribe to ${event}`, e);\n        }\n    }\n    resumeSubscriptions() {\n        Object.keys(this.eventHandlers).forEach((event)=>{\n            if (this.listenerCount(event) && !this.attemptedSubscription(event)) this.startSubscription(event);\n        });\n    }\n    async enable() {\n        const accounts = await this.doSend('eth_accounts');\n        if (accounts.length > 0) {\n            this.accounts = accounts;\n            this.selectedAddress = accounts[0];\n            this.coinbase = accounts[0];\n            this.emit('enable');\n            return accounts;\n        } else {\n            const err = new Error('User Denied Full Provider');\n            err.code = '4001';\n            throw err;\n        }\n    }\n    doSend(rawPayload, rawParams = [], targetChain = this.manualChainId, waitForConnection = true) {\n        const sendFn = (resolve, reject)=>{\n            const method = typeof rawPayload === 'object' ? rawPayload.method : rawPayload;\n            const params = typeof rawPayload === 'object' ? rawPayload.params : rawParams;\n            const chainTarget = typeof rawPayload === 'object' && rawPayload.chainId || targetChain;\n            if (!method) return reject(new Error('Method is not a valid string.'));\n            try {\n                const payload = (0, $aKexC.create)(method, params, this.nextId++, chainTarget);\n                this.promises[payload.id] = {\n                    resolve: (result)=>resolve(result),\n                    reject: reject,\n                    method: payload.method\n                };\n                this.connection.send(payload);\n            } catch (e) {\n                reject(e);\n            }\n        };\n        if (this.connected || !waitForConnection) return new Promise(sendFn);\n        return new Promise((resolve, reject)=>{\n            const resolveSend = ()=>{\n                clearTimeout(disconnectTimer);\n                return resolve(new Promise(sendFn));\n            };\n            const disconnectTimer = setTimeout(()=>{\n                this.off('connect', resolveSend);\n                reject(new Error('Not connected'));\n            }, 5000);\n            this.once('connect', resolveSend);\n        });\n    }\n    async send(methodOrPayload, callbackOrArgs) {\n        if (typeof methodOrPayload === 'string' && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n            const params = callbackOrArgs;\n            return this.doSend(methodOrPayload, params);\n        }\n        if (methodOrPayload && typeof methodOrPayload === 'object' && typeof callbackOrArgs === 'function') {\n            // a callback was passed to send(), forward everything to sendAsync()\n            const cb = callbackOrArgs;\n            return this.sendAsync(methodOrPayload, cb);\n        }\n        return this.request(methodOrPayload);\n    }\n    sendBatch(requests) {\n        return Promise.all(requests.map((payload)=>{\n            return this.doSend(payload.method, payload.params);\n        }));\n    }\n    async subscribe(type, method, params = []) {\n        const id = await this.doSend(type, [\n            method,\n            ...params\n        ]);\n        this.subscriptions.push(id);\n        return id;\n    }\n    async unsubscribe(type, id) {\n        const success = await this.doSend(type, [\n            id\n        ]);\n        if (success) {\n            this.subscriptions = this.subscriptions.filter((_id)=>_id !== id); // Remove subscription\n            this.removeAllListeners(id); // Remove listeners\n            return success;\n        }\n    }\n    async sendAsync(rawPayload, cb) {\n        if (!cb || typeof cb !== 'function') return new Error('Invalid or undefined callback provided to sendAsync');\n        if (!rawPayload) return cb(new Error('Invalid Payload'));\n        // sendAsync can be called with an array for batch requests used by web3.js 0.x\n        // this is not part of EIP-1193's backwards compatibility but we still want to support it\n        if (Array.isArray(rawPayload)) {\n            const payloads = rawPayload.map((p)=>({\n                    ...p,\n                    jsonrpc: '2.0'\n                }));\n            const callback = cb;\n            return this.sendAsyncBatch(payloads, callback);\n        } else {\n            const payload = {\n                ...rawPayload,\n                jsonrpc: '2.0'\n            };\n            const callback = cb;\n            try {\n                const result = await this.doSend(payload.method, payload.params);\n                callback(null, {\n                    id: payload.id,\n                    jsonrpc: payload.jsonrpc,\n                    result: result\n                });\n            } catch (e) {\n                callback(e);\n            }\n        }\n    }\n    async sendAsyncBatch(payloads, cb) {\n        try {\n            const results = await this.sendBatch(payloads);\n            const result = results.map((entry, index)=>{\n                return {\n                    id: payloads[index].id,\n                    jsonrpc: payloads[index].jsonrpc,\n                    result: entry\n                };\n            });\n            cb(null, result);\n        } catch (e) {\n            cb(e);\n        }\n    }\n    isConnected() {\n        return this.connected;\n    }\n    close() {\n        if (this.connection && this.connection.close) this.connection.close();\n        this.off('connect', this.resumeSubscriptions);\n        this.connected = false;\n        const error = new Error('Provider closed, subscription lost, please subscribe again.');\n        this.subscriptions.forEach((id)=>this.emit(id, error)); // Send Error objects to any open subscriptions\n        this.subscriptions = []; // Clear subscriptions\n        this.manualChainId = undefined;\n        this.providerChainId = undefined;\n        this.networkVersion = undefined;\n        this.selectedAddress = undefined;\n        this.coinbase = undefined;\n    }\n    async request(payload) {\n        return this.doSend(payload.method, payload.params, payload.chainId);\n    }\n    setChain(chainId) {\n        if (typeof chainId === 'number') chainId = '0x' + chainId.toString(16);\n        const chainChanged = chainId !== this.chainId;\n        this.manualChainId = chainId;\n        if (chainChanged) this.emit('chainChanged', this.chainId);\n    }\n}\nmodule.exports.default = $a0b3088fe90dd0a1$var$Provider;\n\n});\nparcelRegister(\"aKexC\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.create = void 0;\nfunction $7d297add468ef7e1$var$create(method, params = [], id, targetChain) {\n    const payload = {\n        id: id,\n        method: method,\n        params: params,\n        jsonrpc: '2.0'\n    };\n    if (targetChain) payload.chainId = targetChain;\n    if (payload.method === 'eth_sendTransaction') {\n        const mismatchedChain = $7d297add468ef7e1$var$isChainMismatch(payload);\n        if (mismatchedChain) throw new Error(`Payload chainId (${mismatchedChain}) inconsistent with specified target chainId: ${targetChain}`);\n        return $7d297add468ef7e1$var$updatePayloadChain(payload);\n    }\n    return payload;\n}\nmodule.exports.create = $7d297add468ef7e1$var$create;\nfunction $7d297add468ef7e1$var$isChainMismatch(payload) {\n    if (payload.method !== 'eth_sendTransaction') return false;\n    const tx = payload.params[0] || {};\n    const chainId = tx.chainId;\n    return 'chainId' in tx && parseInt(chainId) !== parseInt(payload.chainId || chainId);\n}\nfunction $7d297add468ef7e1$var$updatePayloadChain(payload) {\n    const tx = payload.params[0] || {};\n    return {\n        ...payload,\n        params: [\n            {\n                ...tx,\n                chainId: tx.chainId || payload.chainId\n            },\n            ...payload.params.slice(1)\n        ]\n    };\n}\n\n});\n\n\nparcelRegister(\"eiLSf\", function(module, exports) {\n\nvar $4XZ0X = parcelRequire(\"4XZ0X\");\nconst $a697e1e3a6d53d43$var$dev = false;\nclass $a697e1e3a6d53d43$var$ConnectionManager extends $4XZ0X {\n    constructor(connections, targets, options){\n        super();\n        this.targets = targets;\n        this.options = options;\n        this.connections = connections;\n        this.connected = false;\n        this.status = 'loading';\n        this.interval = options.interval || 5000;\n        this.name = options.name || 'default';\n        this.inSetup = true;\n        this.connect();\n    }\n    connect(index = 0) {\n        if ($a697e1e3a6d53d43$var$dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`);\n        if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n            if ($a697e1e3a6d53d43$var$dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider');\n        } else if (this.targets.length === 0) {\n            if ($a697e1e3a6d53d43$var$dev) console.log('No valid targets supplied');\n        } else {\n            const { protocol: protocol, location: location } = this.targets[index];\n            this.connection = this.connections[protocol](location, this.options);\n            const connectionErrorHandler = (err)=>this.connectionError(index, err);\n            this.connection.once('error', connectionErrorHandler);\n            this.connection.on('connect', ()=>{\n                this.connection.off('error', connectionErrorHandler);\n                this.connection.once('error', (err)=>this.onError(err));\n                this.connection.once('close', ()=>{\n                    this.connected = false;\n                    this.emitClose();\n                    if (!this.closing) this.refresh();\n                });\n                this.connection.target = this.targets[index];\n                this.connection.index = index;\n                this.targets[index].status = this.connection.status;\n                this.connected = true;\n                this.inSetup = false;\n                if ($a697e1e3a6d53d43$var$dev) console.log('Successfully connected to: ' + this.targets[index].location);\n                this.emit('connect');\n            });\n            this.connection.on('data', (data)=>this.emit('data', data));\n            this.connection.on('payload', (payload)=>this.emit('payload', payload));\n        }\n    }\n    onError(err) {\n        if (this.listenerCount('error')) return this.emit('error', err);\n        console.warn('[eth-provider] Uncaught connection error: ' + err.message);\n    }\n    refresh(interval = this.interval) {\n        if ($a697e1e3a6d53d43$var$dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`);\n        clearTimeout(this.connectTimer);\n        this.connectTimer = setTimeout(()=>this.connect(), interval);\n    }\n    connectionError(index, err) {\n        if (this.connection && this.connection.close) this.connection.close();\n        this.targets[index].status = err;\n        if (this.targets.length - 1 === index) {\n            this.inSetup = false;\n            if ($a697e1e3a6d53d43$var$dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets);\n            this.refresh();\n        } else this.connect(++index);\n    }\n    emitClose() {\n        this.emit('close');\n    }\n    close() {\n        this.closing = true;\n        if (this.connection && this.connection.close && !this.connection.closed) this.connection.close() // Let event bubble from here\n        ;\n        else this.emit('close');\n        clearTimeout(this.connectTimer);\n        clearTimeout(this.setupTimer);\n    }\n    error(payload, message, code = -1) {\n        this.emit('payload', {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            error: {\n                message: message,\n                code: code\n            }\n        });\n    }\n    send(payload) {\n        if (this.inSetup) this.setupTimer = setTimeout(()=>this.send(payload), 100);\n        else if (this.connection.closed) this.error(payload, 'Not connected', 4900);\n        else this.connection.send(payload);\n    }\n}\nmodule.exports = $a697e1e3a6d53d43$var$ConnectionManager;\n\n});\n\n\nparcelRegister(\"5jGvL\", function(module, exports) {\nmodule.exports = (options = {})=>{\n    return {\n        injected: [\n            'injected'\n        ],\n        frame: [\n            'ws://127.0.0.1:1248',\n            'http://127.0.0.1:1248'\n        ],\n        direct: [\n            'ws://127.0.0.1:8546',\n            'http://127.0.0.1:8545'\n        ],\n        infura: [\n            `wss://mainnet.infura.io/ws/v3/${options.infuraId}`,\n            `https://mainnet.infura.io/v3/${options.infuraId}`\n        ],\n        alchemy: [\n            `wss://eth-mainnet.ws.alchemyapi.io/v2/${options.alchemyId}`,\n            `https://eth-mainnet.alchemyapi.io/v2/${options.alchemyId}`\n        ],\n        infuraGoerli: [\n            `wss://goerli.infura.io/ws/v3/${options.infuraId}`,\n            `https://goerli.infura.io/v3/${options.infuraId}`\n        ],\n        alchemyGoerli: [\n            `wss://eth-goerli.ws.alchemyapi.io/v2/${options.alchemyId}`,\n            `https://eth-goerli.alchemyapi.io/v2/${options.alchemyId}`\n        ],\n        infuraPolygon: [\n            `https://polygon-mainnet.infura.io/v3/${options.infuraId}`\n        ],\n        infuraArbitrum: [\n            `https://arbitrum-mainnet.infura.io/v3/${options.infuraId}`\n        ],\n        infuraOptimism: [\n            `https://optimism-mainnet.infura.io/v3/${options.infuraId}`\n        ],\n        infuraSepolia: [\n            `wss://sepolia.infura.io/ws/v3/${options.infuraId}`,\n            `https://sepolia.infura.io/v3/${options.infuraId}`\n        ],\n        gnosis: [\n            'https://rpc.gnosischain.com'\n        ],\n        optimism: [\n            'https://mainnet.optimism.io'\n        ]\n    };\n};\n\n});\n\nparcelRegister(\"3Qpd6\", function(module, exports) {\n\nvar $4XZ0X = parcelRequire(\"4XZ0X\");\nclass $2cc9c8af7c9ecffb$var$InjectedConnection extends $4XZ0X {\n    constructor(_injected, options){\n        super();\n        if (_injected) setTimeout(()=>this.onError(new Error('Injected web3 provider is not currently supported')), 0);\n        else setTimeout(()=>this.onError(new Error('No injected provider found')), 0);\n    }\n    onError(err) {\n        if (this.listenerCount('error')) this.emit('error', err);\n    }\n}\nmodule.exports = (injected)=>(options)=>new $2cc9c8af7c9ecffb$var$InjectedConnection(injected, options);\n\n});\n\nparcelRegister(\"8P8oS\", function(module, exports) {\n\nvar $4XZ0X = parcelRequire(\"4XZ0X\");\nclass $66c99a3e7a14d3b5$var$UnavailableConnection extends $4XZ0X {\n    constructor(message){\n        super();\n        setTimeout(()=>this.onError(new Error(message)), 0);\n    }\n    onError(err) {\n        if (this.listenerCount('error')) this.emit('error', err);\n    }\n}\nmodule.exports = (message)=>()=>new $66c99a3e7a14d3b5$var$UnavailableConnection(message);\n\n});\n\nparcelRegister(\"3bM9E\", function(module, exports) {\n\nvar $4XZ0X = parcelRequire(\"4XZ0X\");\n\nvar $jR1uv = parcelRequire(\"jR1uv\");\nconst $2527c0b32ec42716$var$dev = false;\nlet $2527c0b32ec42716$var$WebSocket;\nclass $2527c0b32ec42716$var$WebSocketConnection extends $4XZ0X {\n    constructor(_WebSocket, url, options){\n        super();\n        this.socketListeners = [];\n        $2527c0b32ec42716$var$WebSocket = _WebSocket;\n        setTimeout(()=>this.create(url, options), 0);\n    }\n    create(url, options) {\n        if (!$2527c0b32ec42716$var$WebSocket) return this.onError(new Error('No WebSocket transport available'));\n        try {\n            this.socket = new $2527c0b32ec42716$var$WebSocket(url, [], {\n                origin: options.origin\n            });\n        } catch (e) {\n            return this.onError(e);\n        }\n        this.addSocketListener('error', this.onError.bind(this));\n        this.addSocketListener('open', this.onOpen.bind(this));\n        this.addSocketListener('close', this.onClose.bind(this));\n    }\n    addSocketListener(event, handler) {\n        this.socket.addEventListener(event, handler);\n        this.socketListeners.push({\n            event: event,\n            handler: handler\n        });\n    }\n    removeAllSocketListeners() {\n        this.socketListeners.forEach(({ event: event, handler: handler })=>{\n            this.socket.removeEventListener(event, handler);\n        });\n        this.socketListeners = [];\n    }\n    onOpen() {\n        this.emit('connect');\n        this.addSocketListener('message', this.onMessage.bind(this));\n    }\n    onMessage(message) {\n        const data = typeof message.data === 'string' ? message.data : '';\n        $jR1uv(data, (err, payloads)=>{\n            if (err) return; //\n            payloads.forEach((load)=>{\n                if (Array.isArray(load)) load.forEach((payload)=>this.emit('payload', payload));\n                else this.emit('payload', load);\n            });\n        });\n    }\n    onError(err) {\n        if (this.listenerCount('error')) this.emit('error', err);\n    }\n    onClose(e) {\n        // onClose should only be called as a result of the socket's close event\n        // OR when close() is called manually and the socket either doesn't exist or is already in a closed state\n        const err = {\n            reason: e ? e.reason : 'unknown',\n            code: e ? e.code : 'unknown'\n        };\n        if (this.socket) {\n            this.removeAllSocketListeners();\n            this.socket = null;\n        }\n        this.closed = true;\n        if ($2527c0b32ec42716$var$dev) console.log(`Closing WebSocket connection, reason: ${err.reason} (code ${err.code})`);\n        this.emit('close');\n        this.removeAllListeners();\n    }\n    close() {\n        if (this.socket && $2527c0b32ec42716$var$WebSocket && this.socket.readyState !== $2527c0b32ec42716$var$WebSocket.CLOSED) {\n            this.removeAllSocketListeners();\n            this.addSocketListener('error', ()=>{});\n            this.addSocketListener('close', this.onClose.bind(this));\n            if (this.socket.terminate) this.socket.terminate();\n            else this.socket.close();\n        } else this.onClose();\n    }\n    error(payload, message, code = -1) {\n        this.emit('payload', {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            error: {\n                message: message,\n                code: code\n            }\n        });\n    }\n    send(payload) {\n        try {\n            if (this.socket && this.socket.readyState === this.socket.CONNECTING) setTimeout((_)=>this.send(payload), 10);\n            else if (!this.socket || this.socket.readyState > 1) {\n                this.connected = false;\n                this.error(payload, 'Not connected');\n            } else this.socket.send(JSON.stringify(payload));\n        } catch (e) {\n            if ($2527c0b32ec42716$var$dev) console.error('Error sending Websocket request', e);\n            this.error(payload, e.message);\n        }\n    }\n}\nmodule.exports = (WebSocket)=>(url, cb)=>new $2527c0b32ec42716$var$WebSocketConnection(WebSocket, url, cb);\n\n});\nparcelRegister(\"jR1uv\", function(module, exports) {\nlet $e7441faa381db86f$var$last, $e7441faa381db86f$var$timeout;\nmodule.exports = (res, cb)=>{\n    const values = [];\n    res.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|').forEach((data)=>{\n        if ($e7441faa381db86f$var$last) data = $e7441faa381db86f$var$last + data // prepend the last chunk\n        ;\n        let result;\n        try {\n            result = JSON.parse(data);\n        } catch (e) {\n            $e7441faa381db86f$var$last = data;\n            clearTimeout($e7441faa381db86f$var$timeout) // restart timeout\n            ;\n            $e7441faa381db86f$var$timeout = setTimeout(()=>cb(new Error('Parse response timeout')), 15000);\n            return;\n        }\n        clearTimeout($e7441faa381db86f$var$timeout);\n        $e7441faa381db86f$var$last = null;\n        if (result) values.push(result);\n    });\n    cb(null, values);\n};\n\n});\n\n\nparcelRegister(\"idxZD\", function(module, exports) {\n\nvar $4XZ0X = parcelRequire(\"4XZ0X\");\n\nvar $lVr8g = parcelRequire(\"lVr8g\");\nvar $d433cf3682cd3e7f$require$uuid = $lVr8g.default;\nconst $d433cf3682cd3e7f$var$dev = false;\nlet $d433cf3682cd3e7f$var$XHR;\nclass $d433cf3682cd3e7f$var$HTTPConnection extends $4XZ0X {\n    constructor(_XHR, url, options){\n        super();\n        $d433cf3682cd3e7f$var$XHR = _XHR;\n        this.options = options;\n        this.connected = false;\n        this.subscriptions = false;\n        this.status = 'loading';\n        this.url = url;\n        this.pollId = $d433cf3682cd3e7f$require$uuid();\n        setTimeout(()=>this.create(), 0);\n        this._emit = (...args)=>!this.closed ? this.emit(...args) : null;\n    }\n    onError(err) {\n        if (!this.closed && this.listenerCount('error')) this.emit('error', err);\n    }\n    create() {\n        if (!$d433cf3682cd3e7f$var$XHR) return this.onError(new Error('No HTTP transport available'));\n        this.on('error', ()=>{\n            if (this.connected) this.close();\n        });\n        this.init();\n    }\n    init() {\n        this.send({\n            jsonrpc: '2.0',\n            method: 'net_version',\n            params: [],\n            id: 1\n        }, (err, response)=>{\n            if (err) return this.onError(err);\n            this.connected = true;\n            this._emit('connect');\n            this.send({\n                jsonrpc: '2.0',\n                id: 1,\n                method: 'eth_pollSubscriptions',\n                params: [\n                    this.pollId,\n                    'immediate'\n                ]\n            }, (err, response)=>{\n                if (!err) {\n                    this.subscriptions = true;\n                    this.pollSubscriptions();\n                }\n            });\n        });\n    }\n    pollSubscriptions() {\n        this.send({\n            jsonrpc: '2.0',\n            id: 1,\n            method: 'eth_pollSubscriptions',\n            params: [\n                this.pollId\n            ]\n        }, (err, result)=>{\n            if (err) {\n                this.subscriptionTimeout = setTimeout(()=>this.pollSubscriptions(), 10000);\n                return this.onError(err);\n            } else {\n                if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions();\n                if (result) result.map((p)=>{\n                    let parse;\n                    try {\n                        parse = JSON.parse(p);\n                    } catch (e) {\n                        parse = false;\n                    }\n                    return parse;\n                }).filter((n)=>n).forEach((p)=>this._emit('payload', p));\n            }\n        });\n    }\n    close() {\n        if ($d433cf3682cd3e7f$var$dev) console.log('Closing HTTP connection');\n        clearTimeout(this.subscriptionTimeout);\n        this._emit('close');\n        this.closed = true;\n        this.removeAllListeners();\n    }\n    filterStatus(res) {\n        if (res.status >= 200 && res.status < 300) return res;\n        const error = new Error(res.statusText);\n        error.res = res;\n        throw error.message;\n    }\n    error(payload, message, code = -1) {\n        this._emit('payload', {\n            id: payload.id,\n            jsonrpc: payload.jsonrpc,\n            error: {\n                message: message,\n                code: code\n            }\n        });\n    }\n    send(payload, internal) {\n        if (this.closed) return this.error(payload, 'Not connected');\n        if (payload.method === 'eth_subscribe') {\n            if (this.subscriptions) payload.pollId = this.pollId;\n            else return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint');\n        }\n        const xhr = new $d433cf3682cd3e7f$var$XHR();\n        let responded = false;\n        const res = (err, result)=>{\n            if (!responded) {\n                xhr.abort();\n                responded = true;\n                if (internal) internal(err, result);\n                else {\n                    const { id: id, jsonrpc: jsonrpc } = payload;\n                    const load = err ? {\n                        id: id,\n                        jsonrpc: jsonrpc,\n                        error: {\n                            message: err.message,\n                            code: err.code\n                        }\n                    } : {\n                        id: id,\n                        jsonrpc: jsonrpc,\n                        result: result\n                    };\n                    this._emit('payload', load);\n                }\n            }\n        };\n        try {\n            xhr.open('POST', this.url, true);\n            xhr.setRequestHeader('Content-Type', 'application/json');\n            // Below not working becasue XHR lib blocks it claiming \"restricted header\"\n            // if (this.options.origin) xhr.setRequestHeader('Origin', this.options.origin)\n            xhr.timeout = 60000;\n            xhr.onerror = res;\n            xhr.ontimeout = res;\n            xhr.onreadystatechange = ()=>{\n                if (xhr.readyState === 4) try {\n                    const response = JSON.parse(xhr.responseText);\n                    res(response.error, response.result);\n                } catch (e) {\n                    res(e);\n                }\n            };\n            xhr.send(JSON.stringify(payload));\n        } catch (e) {\n            if ($d433cf3682cd3e7f$var$dev) console.error('Error sending HTTP request', e);\n            res({\n                message: e.message,\n                code: -1\n            });\n        }\n    }\n}\nmodule.exports = (XHR)=>(url, options)=>new $d433cf3682cd3e7f$var$HTTPConnection(XHR, url, options);\n\n});\nparcelRegister(\"lVr8g\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $ff63f7c2df60f3cd$export$2e2bcd8739ae039);\n\nvar $lSHQz = parcelRequire(\"lSHQz\");\n\nvar $dZwca = parcelRequire(\"dZwca\");\n\nvar $dGYLU = parcelRequire(\"dGYLU\");\nfunction $ff63f7c2df60f3cd$var$v4(options, buf, offset) {\n    if ((0, $lSHQz.default).randomUUID && !buf && !options) return (0, $lSHQz.default).randomUUID();\n    options = options || {};\n    const rnds = options.random || (options.rng || (0, $dZwca.default))(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n    if (buf) {\n        offset = offset || 0;\n        for(let i = 0; i < 16; ++i)buf[offset + i] = rnds[i];\n        return buf;\n    }\n    return (0, $dGYLU.unsafeStringify)(rnds);\n}\nvar $ff63f7c2df60f3cd$export$2e2bcd8739ae039 = $ff63f7c2df60f3cd$var$v4;\n\n});\nparcelRegister(\"lSHQz\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $fee0a737b9b93024$export$2e2bcd8739ae039);\nconst $fee0a737b9b93024$var$randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar $fee0a737b9b93024$export$2e2bcd8739ae039 = {\n    randomUUID: $fee0a737b9b93024$var$randomUUID\n};\n\n});\n\nparcelRegister(\"dZwca\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $a2f9f22eed74441c$export$2e2bcd8739ae039);\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet $a2f9f22eed74441c$var$getRandomValues;\nconst $a2f9f22eed74441c$var$rnds8 = new Uint8Array(16);\nfunction $a2f9f22eed74441c$export$2e2bcd8739ae039() {\n    // lazy load so that environments that need to polyfill have a chance to do so\n    if (!$a2f9f22eed74441c$var$getRandomValues) {\n        // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n        $a2f9f22eed74441c$var$getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n        if (!$a2f9f22eed74441c$var$getRandomValues) throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n    return $a2f9f22eed74441c$var$getRandomValues($a2f9f22eed74441c$var$rnds8);\n}\n\n});\n\nparcelRegister(\"dGYLU\", function(module, exports) {\n\n$parcel$export(module.exports, \"unsafeStringify\", () => $9f7e569ced4458ef$export$8fb373d660548968);\n\nvar $7j5eu = parcelRequire(\"7j5eu\");\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */ const $9f7e569ced4458ef$var$byteToHex = [];\nfor(let i = 0; i < 256; ++i)$9f7e569ced4458ef$var$byteToHex.push((i + 0x100).toString(16).slice(1));\nfunction $9f7e569ced4458ef$export$8fb373d660548968(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    return ($9f7e569ced4458ef$var$byteToHex[arr[offset + 0]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 1]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 2]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 3]] + '-' + $9f7e569ced4458ef$var$byteToHex[arr[offset + 4]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 5]] + '-' + $9f7e569ced4458ef$var$byteToHex[arr[offset + 6]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 7]] + '-' + $9f7e569ced4458ef$var$byteToHex[arr[offset + 8]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 9]] + '-' + $9f7e569ced4458ef$var$byteToHex[arr[offset + 10]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 11]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 12]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 13]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 14]] + $9f7e569ced4458ef$var$byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction $9f7e569ced4458ef$var$stringify(arr, offset = 0) {\n    const uuid = $9f7e569ced4458ef$export$8fb373d660548968(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0, $7j5eu.default)(uuid)) throw TypeError('Stringified UUID is invalid');\n    return uuid;\n}\nvar $9f7e569ced4458ef$export$2e2bcd8739ae039 = $9f7e569ced4458ef$var$stringify;\n\n});\nparcelRegister(\"7j5eu\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $551e5de13ad972af$export$2e2bcd8739ae039);\n\nvar $6yBXY = parcelRequire(\"6yBXY\");\nfunction $551e5de13ad972af$var$validate(uuid) {\n    return typeof uuid === 'string' && (0, $6yBXY.default).test(uuid);\n}\nvar $551e5de13ad972af$export$2e2bcd8739ae039 = $551e5de13ad972af$var$validate;\n\n});\nparcelRegister(\"6yBXY\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4c635e641227e3dd$export$2e2bcd8739ae039);\nvar $4c635e641227e3dd$export$2e2bcd8739ae039 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\n});\n\n\n\n\n\n\n\nwindow.ethereum = (parcelRequire(\"aAaC6\"))('frame');\n// let storage = initial\n// const c = {}\n// document.cookie.split('; ').forEach(i => { c[i.split('=')[0]] = i.split('=')[1] })\n// const socket = new WebSocket(`ws://127.0.0.1:8421?app=${c.__app}&session=${c.__session}`)\n// let socketOpen = false\n// socket.addEventListener('open', e => { socketOpen = true })\n// socket.addEventListener('message', e => {\n//   try {\n//     const message = JSON.parse(e.data)\n//     if (message.type === 'localStorage') {\n//       storage = JSON.parse(message.state)\n//       window.dispatchEvent('storage')\n//     }\n//   } catch (e) {}\n// })\n// const updateStorage = () => {\n//   if (socketOpen) socket.send(JSON.stringify({ type: 'localStorage', state: JSON.stringify(storage) }))\n// }\n// window.localStorage.clear()\n// window.localStorage.length = Object.keys(storage).length\n// window.localStorage.getItem = key => {\n//   if (!key || !storage[escape(key)]) return null\n//   return unescape(storage[escape(key)])\n// }\n// window.localStorage.setItem = (key, value) => {\n//   if (!key) return null\n//   storage[escape(key)] = escape(value)\n//   window.localStorage.length = Object.keys(storage)\n//   updateStorage()\n// }\n// window.localStorage.removeItem = key => {\n//   if (!key) return null\n//   delete storage[escape(key)]\n//   window.localStorage.length = Object.keys(storage)\n//   updateStorage()\n// }\n// window.localStorage.clear = () => {\n//   storage = {}\n//   window.localStorage.length = Object.keys(storage)\n//   updateStorage()\n// }\n// window.localStorage.hasOwnProperty = key => {\n//   return Boolean(storage[escape(key)])\n// }\n// window.history.replaceState({}, document.title, `/${c.__app}`)\nconst $d740b480b4ea925e$var$currentScript = document.currentScript || document.scripts[document.scripts.length - 1];\n$d740b480b4ea925e$var$currentScript.parentNode.removeChild($d740b480b4ea925e$var$currentScript);\n\n})();\n//# sourceMappingURL=inject.js.map\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets, options) => {\n  if (targets && !Array.isArray(targets) && typeof targets === 'object' && !options) {\n    options = targets\n    targets = undefined\n  }\n  if (!targets) targets = ['injected', 'frame']\n  if (!options) options = {}\n\n  targets = [].concat(targets)\n\n  targets.forEach(t => {\n    if (t.startsWith('alchemy') && !options.alchemyId) throw new Error('Alchemy was included as a connection target but no Alchemy project ID was passed in options e.g. { alchemyId: \\'123abc\\' }')\n    if (t.startsWith('infura') && !options.infuraId) throw new Error('Infura was included as a connection target but no Infura project ID was passed in options e.g. { infuraId: \\'123abc\\' }')\n  })\n\n  const sets = presets(options)\n\n  return provider(connections, resolve(targets, sets), options)\n}\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider').default\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n\n  async function checkSyncing () {\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n      }\n    } catch (e) {\n      // don't do anything if it can't be determined whether the node is syncing or not\n    }\n  }\n\n  async function checkConnected () {\n    if (provider.inSetup) return setTimeout(checkConnected, 1000)\n\n    try {\n      await provider.send('eth_chainId')\n      update('connected')\n\n      setTimeout(checkSyncing, 500)\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n\n  update('loading')\n  checkConnected()\n  provider.on('connect', () => checkConnected())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = __importDefault(require(\"events\"));\nconst payload_1 = require(\"./payload\");\nclass Provider extends events_1.default {\n    constructor(connection) {\n        super();\n        this.promises = {};\n        this.attemptedSubscriptions = new Set();\n        this.subscriptions = [];\n        this.checkConnectionRunning = false;\n        this.nextId = 1;\n        this.connected = false;\n        this.accounts = [];\n        this.selectedAddress = undefined;\n        this.coinbase = undefined;\n        this.enable = this.enable.bind(this);\n        this.doSend = this.doSend.bind(this);\n        this.send = this.send.bind(this);\n        this.sendBatch = this.sendBatch.bind(this);\n        this.subscribe = this.subscribe.bind(this);\n        this.unsubscribe = this.unsubscribe.bind(this);\n        this.resumeSubscriptions = this.resumeSubscriptions.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.sendAsyncBatch = this.sendAsyncBatch.bind(this);\n        this.isConnected = this.isConnected.bind(this);\n        this.close = this.close.bind(this);\n        this.request = this.request.bind(this);\n        this.connection = connection;\n        this.on('connect', this.resumeSubscriptions);\n        this.connection.on('connect', () => this.checkConnection(1000));\n        this.connection.on('close', () => {\n            this.connected = false;\n            this.attemptedSubscriptions.clear();\n            this.emit('close');\n            this.emit('disconnect');\n        });\n        this.connection.on('payload', payload => {\n            const { id, method, error, result } = payload;\n            if (typeof id !== 'undefined') {\n                if (this.promises[id]) { // Fulfill promise\n                    const requestMethod = this.promises[id].method;\n                    if (requestMethod && ['eth_accounts', 'eth_requestAccounts'].includes(requestMethod)) {\n                        const accounts = result || [];\n                        this.accounts = accounts;\n                        this.selectedAddress = accounts[0];\n                        this.coinbase = accounts[0];\n                    }\n                    payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result);\n                    delete this.promises[id];\n                }\n            }\n            else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n                // Events: connect, disconnect, chainChanged, chainsChanged, accountsChanged, assetsChanged, message\n                this.emit(payload.params.subscription, payload.params.result);\n                this.emit(method, payload.params); // Older EIP-1193\n                this.emit('message', {\n                    type: payload.method,\n                    data: {\n                        subscription: payload.params.subscription,\n                        result: payload.params.result\n                    }\n                });\n                this.emit('data', payload); // Backwards Compatibility\n            }\n        });\n        this.on('newListener', event => {\n            if (Object.keys(this.eventHandlers).includes(event)) {\n                if (!this.attemptedSubscription(event) && this.connected) {\n                    this.startSubscription(event);\n                    if (event === 'networkChanged') {\n                        console.warn('The networkChanged event is being deprecated, use chainChanged instead');\n                    }\n                }\n            }\n        });\n        this.eventHandlers = {\n            networkChanged: netId => {\n                this.networkVersion = (typeof netId === 'string') ? parseInt(netId) : netId;\n                this.emit('networkChanged', this.networkVersion);\n            },\n            chainChanged: chainId => {\n                this.providerChainId = chainId;\n                if (!this.manualChainId) {\n                    this.emit('chainChanged', chainId);\n                }\n            },\n            chainsChanged: chains => {\n                this.emit('chainsChanged', chains);\n            },\n            accountsChanged: (accounts) => {\n                this.selectedAddress = accounts[0];\n                this.emit('accountsChanged', accounts);\n            },\n            assetsChanged: assets => {\n                this.emit('assetsChanged', assets);\n            }\n        };\n    }\n    get chainId() {\n        return this.manualChainId || this.providerChainId;\n    }\n    async checkConnection(retryTimeout = 4000) {\n        if (this.checkConnectionRunning || this.connected)\n            return;\n        clearTimeout(this.checkConnectionTimer);\n        this.checkConnectionTimer = undefined;\n        this.checkConnectionRunning = true;\n        try {\n            this.networkVersion = await this.doSend('net_version', [], undefined, false);\n            this.providerChainId = await this.doSend('eth_chainId', [], undefined, false);\n            this.connected = true;\n        }\n        catch (e) {\n            this.checkConnectionTimer = setTimeout(() => this.checkConnection(), retryTimeout);\n            this.connected = false;\n        }\n        finally {\n            this.checkConnectionRunning = false;\n            if (this.connected) {\n                this.emit('connect', { chainId: this.providerChainId });\n            }\n        }\n    }\n    attemptedSubscription(event) {\n        return this.attemptedSubscriptions.has(event);\n    }\n    setSubscriptionAttempted(event) {\n        this.attemptedSubscriptions.add(event);\n    }\n    async startSubscription(event) {\n        console.debug(`starting subscription for ${event} events`);\n        this.setSubscriptionAttempted(event);\n        try {\n            const eventId = await (this.subscribe('eth_subscribe', event));\n            this.on(eventId, this.eventHandlers[event]);\n        }\n        catch (e) {\n            console.warn(`Unable to subscribe to ${event}`, e);\n        }\n    }\n    resumeSubscriptions() {\n        Object.keys(this.eventHandlers).forEach(event => {\n            if (this.listenerCount(event) && !this.attemptedSubscription(event))\n                this.startSubscription(event);\n        });\n    }\n    async enable() {\n        const accounts = await this.doSend('eth_accounts');\n        if (accounts.length > 0) {\n            this.accounts = accounts;\n            this.selectedAddress = accounts[0];\n            this.coinbase = accounts[0];\n            this.emit('enable');\n            return accounts;\n        }\n        else {\n            const err = new Error('User Denied Full Provider');\n            err.code = '4001';\n            throw err;\n        }\n    }\n    doSend(rawPayload, rawParams = [], targetChain = this.manualChainId, waitForConnection = true) {\n        const sendFn = (resolve, reject) => {\n            const method = (typeof rawPayload === 'object') ? rawPayload.method : rawPayload;\n            const params = (typeof rawPayload === 'object') ? rawPayload.params : rawParams;\n            const chainTarget = ((typeof rawPayload === 'object') && rawPayload.chainId) || targetChain;\n            if (!method) {\n                return reject(new Error('Method is not a valid string.'));\n            }\n            try {\n                const payload = (0, payload_1.create)(method, params, this.nextId++, chainTarget);\n                this.promises[payload.id] = {\n                    resolve: (result) => resolve(result),\n                    reject,\n                    method: payload.method\n                };\n                this.connection.send(payload);\n            }\n            catch (e) {\n                reject(e);\n            }\n        };\n        if (this.connected || !waitForConnection) {\n            return new Promise(sendFn);\n        }\n        return new Promise((resolve, reject) => {\n            const resolveSend = () => {\n                clearTimeout(disconnectTimer);\n                return resolve(new Promise(sendFn));\n            };\n            const disconnectTimer = setTimeout(() => {\n                this.off('connect', resolveSend);\n                reject(new Error('Not connected'));\n            }, 5000);\n            this.once('connect', resolveSend);\n        });\n    }\n    async send(methodOrPayload, callbackOrArgs) {\n        if (typeof methodOrPayload === 'string' &&\n            (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n            const params = callbackOrArgs;\n            return this.doSend(methodOrPayload, params);\n        }\n        if (methodOrPayload &&\n            typeof methodOrPayload === 'object' &&\n            typeof callbackOrArgs === 'function') {\n            // a callback was passed to send(), forward everything to sendAsync()\n            const cb = callbackOrArgs;\n            return this.sendAsync(methodOrPayload, cb);\n        }\n        return this.request(methodOrPayload);\n    }\n    sendBatch(requests) {\n        return Promise.all(requests.map(payload => {\n            return this.doSend(payload.method, payload.params);\n        }));\n    }\n    async subscribe(type, method, params = []) {\n        const id = await this.doSend(type, [method, ...params]);\n        this.subscriptions.push(id);\n        return id;\n    }\n    async unsubscribe(type, id) {\n        const success = await this.doSend(type, [id]);\n        if (success) {\n            this.subscriptions = this.subscriptions.filter(_id => _id !== id); // Remove subscription\n            this.removeAllListeners(id); // Remove listeners\n            return success;\n        }\n    }\n    async sendAsync(rawPayload, cb) {\n        if (!cb || typeof cb !== 'function')\n            return new Error('Invalid or undefined callback provided to sendAsync');\n        if (!rawPayload)\n            return cb(new Error('Invalid Payload'));\n        // sendAsync can be called with an array for batch requests used by web3.js 0.x\n        // this is not part of EIP-1193's backwards compatibility but we still want to support it\n        if (Array.isArray(rawPayload)) {\n            const payloads = rawPayload.map(p => ({ ...p, jsonrpc: '2.0' }));\n            const callback = cb;\n            return this.sendAsyncBatch(payloads, callback);\n        }\n        else {\n            const payload = { ...rawPayload, jsonrpc: '2.0' };\n            const callback = cb;\n            try {\n                const result = await this.doSend(payload.method, payload.params);\n                callback(null, { id: payload.id, jsonrpc: payload.jsonrpc, result });\n            }\n            catch (e) {\n                callback(e);\n            }\n        }\n    }\n    async sendAsyncBatch(payloads, cb) {\n        try {\n            const results = await this.sendBatch(payloads);\n            const result = results.map((entry, index) => {\n                return { id: payloads[index].id, jsonrpc: payloads[index].jsonrpc, result: entry };\n            });\n            cb(null, result);\n        }\n        catch (e) {\n            cb(e);\n        }\n    }\n    isConnected() {\n        return this.connected;\n    }\n    close() {\n        if (this.connection && this.connection.close)\n            this.connection.close();\n        this.off('connect', this.resumeSubscriptions);\n        this.connected = false;\n        const error = new Error('Provider closed, subscription lost, please subscribe again.');\n        this.subscriptions.forEach(id => this.emit(id, error)); // Send Error objects to any open subscriptions\n        this.subscriptions = []; // Clear subscriptions\n        this.manualChainId = undefined;\n        this.providerChainId = undefined;\n        this.networkVersion = undefined;\n        this.selectedAddress = undefined;\n        this.coinbase = undefined;\n    }\n    async request(payload) {\n        return this.doSend(payload.method, payload.params, payload.chainId);\n    }\n    setChain(chainId) {\n        if (typeof chainId === 'number')\n            chainId = '0x' + chainId.toString(16);\n        const chainChanged = (chainId !== this.chainId);\n        this.manualChainId = chainId;\n        if (chainChanged) {\n            this.emit('chainChanged', this.chainId);\n        }\n    }\n}\nexports.default = Provider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.create = void 0;\nfunction create(method, params = [], id, targetChain) {\n    const payload = {\n        id, method, params, jsonrpc: '2.0'\n    };\n    if (targetChain) {\n        payload.chainId = targetChain;\n    }\n    if (payload.method === 'eth_sendTransaction') {\n        const mismatchedChain = isChainMismatch(payload);\n        if (mismatchedChain) {\n            throw new Error(`Payload chainId (${mismatchedChain}) inconsistent with specified target chainId: ${targetChain}`);\n        }\n        return updatePayloadChain(payload);\n    }\n    return payload;\n}\nexports.create = create;\nfunction isChainMismatch(payload) {\n    if (payload.method !== 'eth_sendTransaction')\n        return false;\n    const tx = payload.params[0] || {};\n    const chainId = tx.chainId;\n    return ('chainId' in tx) && parseInt(chainId) !== parseInt(payload.chainId || chainId);\n}\nfunction updatePayloadChain(payload) {\n    const tx = payload.params[0] || {};\n    return { ...payload, params: [{ ...tx, chainId: tx.chainId || payload.chainId }, ...payload.params.slice(1)] };\n}\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.options = options\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location, this.options)\n\n      const connectionErrorHandler = (err) => this.connectionError(index, err)\n\n      this.connection.once('error', connectionErrorHandler)\n\n      this.connection.on('connect', () => {\n        this.connection.off('error', connectionErrorHandler)\n        this.connection.once('error', (err) => this.onError(err))\n\n        this.connection.once('close', () => {\n          this.connected = false\n          this.emitClose()\n          if (!this.closing) this.refresh()\n        })\n\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  onError (err) {\n    if (this.listenerCount('error')) return this.emit('error', err)\n    console.warn('[eth-provider] Uncaught connection error: ' + err.message)\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    if (this.connection && this.connection.close) this.connection.close()\n\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  emitClose () {\n    this.emit('close')\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection && this.connection.close && !this.connection.closed) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n    clearTimeout(this.setupTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      this.setupTimer = setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected', 4900)\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","module.exports = (options = {}) => {\n  return {\n    injected: ['injected'],\n    frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n    direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n    infura: [`wss://mainnet.infura.io/ws/v3/${options.infuraId}`, `https://mainnet.infura.io/v3/${options.infuraId}`],\n    alchemy: [`wss://eth-mainnet.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-mainnet.alchemyapi.io/v2/${options.alchemyId}`],\n    infuraGoerli: [`wss://goerli.infura.io/ws/v3/${options.infuraId}`, `https://goerli.infura.io/v3/${options.infuraId}`],\n    alchemyGoerli: [`wss://eth-goerli.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-goerli.alchemyapi.io/v2/${options.alchemyId}`],\n    infuraPolygon: [`https://polygon-mainnet.infura.io/v3/${options.infuraId}`],\n    infuraArbitrum: [`https://arbitrum-mainnet.infura.io/v3/${options.infuraId}`],\n    infuraOptimism: [`https://optimism-mainnet.infura.io/v3/${options.infuraId}`],\n    infuraSepolia: [`wss://sepolia.infura.io/ws/v3/${options.infuraId}`, `https://sepolia.infura.io/v3/${options.infuraId}`],\n    gnosis: ['https://rpc.gnosischain.com'],\n    optimism: ['https://mainnet.optimism.io']\n  }\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.onError(new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.onError(new Error('No injected provider found')), 0)\n    }\n  }\n\n  onError (err) {\n    if (this.listenerCount('error')) this.emit('error', err)\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.onError(new Error(message)), 0)\n  }\n\n  onError (err) {\n    if (this.listenerCount('error')) this.emit('error', err)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    this.socketListeners = []\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) return this.onError(new Error('No WebSocket transport available'))\n    try {\n      this.socket = new WebSocket(url, [], { origin: options.origin })\n    } catch (e) {\n      return this.onError(e)\n    }\n\n    this.addSocketListener('error', this.onError.bind(this))\n    this.addSocketListener('open', this.onOpen.bind(this))\n    this.addSocketListener('close', this.onClose.bind(this))\n  }\n\n  addSocketListener (event, handler) {\n    this.socket.addEventListener(event, handler)\n    this.socketListeners.push({ event, handler })\n  }\n\n  removeAllSocketListeners () {\n    this.socketListeners.forEach(({ event, handler }) => {\n      this.socket.removeEventListener(event, handler)\n    })\n    this.socketListeners = []\n  }\n\n  onOpen () {\n    this.emit('connect')\n    this.addSocketListener('message', this.onMessage.bind(this))\n  }\n\n  onMessage (message) {\n    const data = typeof message.data === 'string' ? message.data : ''\n    parse(data, (err, payloads) => {\n      if (err) return //\n      payloads.forEach(load => {\n        if (Array.isArray(load)) {\n          load.forEach(payload => this.emit('payload', payload))\n        } else {\n          this.emit('payload', load)\n        }\n      })\n    })\n  }\n\n  onError (err) {\n    if (this.listenerCount('error')) this.emit('error', err)\n  }\n\n  onClose (e) {\n    // onClose should only be called as a result of the socket's close event\n    // OR when close() is called manually and the socket either doesn't exist or is already in a closed state\n    const err = {\n      reason: e ? e.reason : 'unknown',\n      code: e ? e.code : 'unknown'\n    }\n\n    if (this.socket) {\n      this.removeAllSocketListeners()\n      this.socket = null\n    }\n\n    this.closed = true\n\n    if (dev) console.log(`Closing WebSocket connection, reason: ${err.reason} (code ${err.code})`)\n\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket && WebSocket && this.socket.readyState !== WebSocket.CLOSED) {\n      this.removeAllSocketListeners()\n      this.addSocketListener('error', () => {})\n      this.addSocketListener('close', this.onClose.bind(this))\n      if (this.socket.terminate) {\n        this.socket.terminate()\n      } else {\n        this.socket.close()\n      }\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    try {\n      if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n        setTimeout(_ => this.send(payload), 10)\n      } else if (!this.socket || this.socket.readyState > 1) {\n        this.connected = false\n        this.error(payload, 'Not connected')\n      } else {\n        this.socket.send(JSON.stringify(payload))\n      }\n    } catch (e) {\n      if (dev) console.error('Error sending Websocket request', e)\n\n      this.error(payload, e.message)\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst { v4: uuid } = require('uuid')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.options = options\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n    this._emit = (...args) => !this.closed ? this.emit(...args) : null\n  }\n\n  onError (err) {\n    if (!this.closed && this.listenerCount('error')) this.emit('error', err)\n  }\n\n  create () {\n    if (!XHR) return this.onError(new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'net_version', params: [], id: 1 }, (err, response) => {\n      if (err) return this.onError(err)\n      this.connected = true\n      this._emit('connect')\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.onError(err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this._emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n\n    clearTimeout(this.subscriptionTimeout)\n\n    this._emit('close')\n    this.closed = true\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this._emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this._emit('payload', load)\n        }\n      }\n    }\n\n    try {\n      xhr.open('POST', this.url, true)\n      xhr.setRequestHeader('Content-Type', 'application/json')\n      // Below not working becasue XHR lib blocks it claiming \"restricted header\"\n      // if (this.options.origin) xhr.setRequestHeader('Origin', this.options.origin)\n      xhr.timeout = 60 * 1000\n      xhr.onerror = res\n      xhr.ontimeout = res\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          try {\n            const response = JSON.parse(xhr.responseText)\n            res(response.error, response.result)\n          } catch (e) {\n            res(e)\n          }\n        }\n      }\n      xhr.send(JSON.stringify(payload))\n    } catch (e) {\n      if (dev) console.error('Error sending HTTP request', e)\n\n      res({ message: e.message, code: -1 })\n    }\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","window.ethereum = require('eth-provider')('frame')\n\n// let storage = initial\n\n// const c = {}\n// document.cookie.split('; ').forEach(i => { c[i.split('=')[0]] = i.split('=')[1] })\n// const socket = new WebSocket(`ws://127.0.0.1:8421?app=${c.__app}&session=${c.__session}`)\n// let socketOpen = false\n// socket.addEventListener('open', e => { socketOpen = true })\n// socket.addEventListener('message', e => {\n//   try {\n//     const message = JSON.parse(e.data)\n//     if (message.type === 'localStorage') {\n//       storage = JSON.parse(message.state)\n//       window.dispatchEvent('storage')\n//     }\n//   } catch (e) {}\n// })\n// const updateStorage = () => {\n//   if (socketOpen) socket.send(JSON.stringify({ type: 'localStorage', state: JSON.stringify(storage) }))\n// }\n\n// window.localStorage.clear()\n\n// window.localStorage.length = Object.keys(storage).length\n\n// window.localStorage.getItem = key => {\n//   if (!key || !storage[escape(key)]) return null\n//   return unescape(storage[escape(key)])\n// }\n\n// window.localStorage.setItem = (key, value) => {\n//   if (!key) return null\n//   storage[escape(key)] = escape(value)\n//   window.localStorage.length = Object.keys(storage)\n//   updateStorage()\n// }\n\n// window.localStorage.removeItem = key => {\n//   if (!key) return null\n//   delete storage[escape(key)]\n//   window.localStorage.length = Object.keys(storage)\n//   updateStorage()\n// }\n\n// window.localStorage.clear = () => {\n//   storage = {}\n//   window.localStorage.length = Object.keys(storage)\n//   updateStorage()\n// }\n\n// window.localStorage.hasOwnProperty = key => {\n//   return Boolean(storage[escape(key)])\n// }\n\n// window.history.replaceState({}, document.title, `/${c.__app}`)\n\nconst currentScript = document.currentScript || document.scripts[document.scripts.length - 1]\ncurrentScript.parentNode.removeChild(currentScript)\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$8ye8B","$2Fkjn","$5jGvL","$7b457fd0817e60e9$var$injected","ethereum","window","web3","currentProvider","$7b457fd0817e60e9$var$ws","WebSocket","$7b457fd0817e60e9$var$XHR","XMLHttpRequest","__isProvider","$7b457fd0817e60e9$var$connections","injected","ipc","ws","http","targets","options","Array","isArray","undefined","concat","forEach","t","startsWith","alchemyId","infuraId","$639c7731244f095e$var$getProtocol","location","endsWith","presets","map","provider","type","protocol","filter","console","log","$4XZ0X","$1f0f2a9089e9e7b2$require$EthereumProvider","$dNoJe","default","$eiLSf","$1f0f2a9089e9e7b2$var$monitor","update","status","emit","checkSyncing","send","checkConnected","inSetup","setTimeout","on","connections","indexOf","setMaxListeners","$39dc0051b7cf87d5$var$ReflectOwnKeys","$39dc0051b7cf87d5$var$R","Reflect","$39dc0051b7cf87d5$var$ReflectApply","apply","target","receiver","args","Function","prototype","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","$39dc0051b7cf87d5$var$NumberIsNaN","Number","isNaN","value","$39dc0051b7cf87d5$var$EventEmitter","once","emitter","name","Promise","resolve","reject","flags","errorListener","removeListener","resolver","slice","arguments","$39dc0051b7cf87d5$var$eventTargetAgnosticAddListener","EventEmitter","_events","_eventsCount","_maxListeners","$39dc0051b7cf87d5$var$defaultMaxListeners","$39dc0051b7cf87d5$var$checkListener","listener","TypeError","$39dc0051b7cf87d5$var$_getMaxListeners","that","defaultMaxListeners","$39dc0051b7cf87d5$var$_addListener","prepend","events","create","newListener","existing","unshift","push","m","length","warned","w","String","count","warn","$39dc0051b7cf87d5$var$onceWrapper","fired","wrapFn","$39dc0051b7cf87d5$var$_onceWrap","state","wrapped","bind","$39dc0051b7cf87d5$var$_listeners","unwrap","evlistener","$39dc0051b7cf87d5$var$unwrapListeners","arr","ret","i","$39dc0051b7cf87d5$var$arrayClone","$39dc0051b7cf87d5$var$listenerCount","copy","addEventListener","wrapListener","arg","removeEventListener","RangeError","getPrototypeOf","getMaxListeners","doError","error","er","message","context","handler","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","$39dc0051b7cf87d5$var$spliceOne","index","pop","off","removeAllListeners","key","keys","rawListeners","listenerCount","eventNames","$a0b3088fe90dd0a1$var$__importDefault","__importDefault","mod","__esModule","$a0b3088fe90dd0a1$var$events_1","$aKexC","$a0b3088fe90dd0a1$var$Provider","constructor","connection","promises","attemptedSubscriptions","Set","subscriptions","checkConnectionRunning","nextId","connected","accounts","selectedAddress","coinbase","enable","doSend","sendBatch","subscribe","unsubscribe","resumeSubscriptions","sendAsync","sendAsyncBatch","isConnected","close","request","checkConnection","clear","payload","method","result","requestMethod","includes","params","subscription","data","event","eventHandlers","attemptedSubscription","startSubscription","networkChanged","netId","networkVersion","parseInt","chainChanged","chainId","providerChainId","manualChainId","chainsChanged","chains","accountsChanged","assetsChanged","assets","retryTimeout","clearTimeout","checkConnectionTimer","has","setSubscriptionAttempted","add","debug","eventId","rawPayload","rawParams","targetChain","waitForConnection","sendFn","chainTarget","resolveSend","disconnectTimer","methodOrPayload","callbackOrArgs","requests","all","success","_id","cb","payloads","p","jsonrpc","callback","results","entry","setChain","toString","mismatchedChain","$7d297add468ef7e1$var$isChainMismatch","tx","$7d297add468ef7e1$var$updatePayloadChain","interval","connect","connectionErrorHandler","connectionError","onError","emitClose","closing","refresh","connectTimer","closed","setupTimer","frame","direct","infura","alchemy","infuraGoerli","alchemyGoerli","infuraPolygon","infuraArbitrum","infuraOptimism","infuraSepolia","gnosis","optimism","$2cc9c8af7c9ecffb$var$InjectedConnection","_injected","$66c99a3e7a14d3b5$var$UnavailableConnection","$2527c0b32ec42716$var$WebSocket","$jR1uv","$2527c0b32ec42716$var$WebSocketConnection","_WebSocket","url","socketListeners","socket","origin","addSocketListener","onOpen","onClose","removeAllSocketListeners","onMessage","load","reason","readyState","CLOSED","terminate","CONNECTING","_","JSON","stringify","$e7441faa381db86f$var$last","$e7441faa381db86f$var$timeout","res","values","replace","split","parse","$d433cf3682cd3e7f$var$XHR","$d433cf3682cd3e7f$require$uuid","$lVr8g","$d433cf3682cd3e7f$var$HTTPConnection","_XHR","pollId","_emit","response","pollSubscriptions","subscriptionTimeout","filterStatus","statusText","internal","xhr","responded","abort","open","setRequestHeader","timeout","onerror","ontimeout","onreadystatechange","responseText","XHR","$ff63f7c2df60f3cd$export$2e2bcd8739ae039","$lSHQz","$dZwca","$dGYLU","buf","offset","randomUUID","rnds","random","rng","unsafeStringify","$fee0a737b9b93024$export$2e2bcd8739ae039","crypto","$a2f9f22eed74441c$var$getRandomValues","$a2f9f22eed74441c$export$2e2bcd8739ae039","$a2f9f22eed74441c$var$rnds8","Uint8Array","getRandomValues","$9f7e569ced4458ef$export$8fb373d660548968","$9f7e569ced4458ef$var$byteToHex","toLowerCase","$551e5de13ad972af$export$2e2bcd8739ae039","$6yBXY","uuid","test","$4c635e641227e3dd$export$2e2bcd8739ae039","$d740b480b4ea925e$var$currentScript","document","currentScript","scripts","parentNode","removeChild"],"version":3,"file":"inject.js.map"}